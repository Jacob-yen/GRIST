# add '_grist' at the end of each path

case_dict = {
    "GH_IPS1":["scripts.study_case.GH_IPS1.ghips1"],
    "GH_IPS1_mutant":["scripts.study_case.GH_IPS1_mutant.ghips1_mutant"],
    "GH_IPS6":["scripts.study_case.GH_IPS6.command_line.run_logistic_regression"],
    "GH_IPS9":["scripts.study_case.GH_IPS9.ghips9"],
    "handon_tensorflow":["scripts.study_case.handon_tensorflow.code_10_image"],
    "MNIST":["scripts.study_case.MNIST.v3.train"],
    "python_tensorflow":["scripts.study_case.python_tensorflow.mnist"],
    "SO_IPS1":["scripts.study_case.SO_IPS1.soips1"],
    "SO_IPS2":["scripts.study_case.SO_IPS2.soips2"],
    "SO_IPS6":["scripts.study_case.SO_IPS6.soips6"],
    "SO_IPS7":["scripts.study_case.SO_IPS7.soips7"],
    "SO_IPS14":["scripts.study_case.SO_IPS14.soips14"],
    "tensorflow_examples":["scripts.study_case.tensorflow_examples.logistic_regression"],
    "tensorflow_examples_tutorials_mnist":["scripts.study_case.tensorflow_examples_tutorials_mnist.mnist_softmax"],
    "Tensorflow_gesture_Demo":["scripts.study_case.Tensorflow_gesture_Demo.Mnist"],
    "tensorflow_in_ml":["scripts.study_case.tensorflow_in_ml.softmax"],
    "tensorflow_mnist":["scripts.study_case.tensorflow_mnist.mnist"],
    "TensorFuzz":["scripts.study_case.TensorFuzz.nan_model_exp",
                  "scripts.study_case.TensorFuzz.nan_model_log"],
    "tensorflow_value_iteration_networks_v1":["scripts.study_case.tensorflow_value_iteration_networks_v1.train"],
    "generative_models_v1":["scripts.study_case.generative_models_v1.GAN.infogan.infogan_tensorflow"],
    "generative_models_v2":["scripts.study_case.generative_models_v2.GAN.auxiliary_classifier_gan.ac_gan_tensorflow",
                            "scripts.study_case.generative_models_v2.GAN.ali_bigan.ali_bigan_tensorflow",
                            "scripts.study_case.generative_models_v2.GAN.boundary_seeking_gan.bgan_tensorflow",
                            "scripts.study_case.generative_models_v2.GAN.coupled_gan.cogan_tensorflow",
                            "scripts.study_case.generative_models_v2.GAN.disco_gan.discogan_tensorflow",
                            "scripts.study_case.generative_models_v2.GAN.mode_regularized_gan.mode_reg_gan_tensorflow",
                            "scripts.study_case.generative_models_v2.GAN.vanilla_gan.gan_tensorflow"],
    "tf_unet":["scripts.study_case.tf_unet.test_toy"],
    "pytorch_playground":["scripts.study_case.pytorch_playground.pytorch_pg"],
    "SC_DNN":["scripts.study_case.SC_DNN.sc_train_creg"],
    "skorch":["scripts.study_case.skorch.main"],
    "RBM_grist":["scripts.study_case.RBM_grist.rbm"],
    "pytorch_geometric_exp":["scripts.study_case.pytorch_geometric_exp.test.utils.test_softmax"],
    "pytorch_geometric_fork":["scripts.study_case.pytorch_geometric_fork.test.nn.models.test_autoencoder"],
    "Matchzoo":["scripts.study_case.MatchZoo_py.tests.test_losses"],
    "MachineLearning":["scripts.study_case.MachineLearning.temp"],
    "DeepLearningTest":["scripts.study_case.DeepLearning.deeplearningtest"],
    "tensorflow_GAN_MNIST":["scripts.study_case.tensorflow_GAN_MNIST.GAN_MNIST"],
    "gan_practice":["scripts.study_case.gan_practice.gan_mnist"]
}